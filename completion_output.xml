 <root>
<diff><![CDATA[
diff --git a/app/01_❓_Ask.py b/app/01_❓_Ask.py
index 2f1f50c..801a590 100644
--- a/app/01_❓_Ask.py
+++ b/app/01_❓_Ask.py
@@ -20,7 +20,8 @@ if "chosen_class" not in st.session_state:
 if "chosen_pdf" not in st.session_state:
     st.session_state.chosen_pdf = "--"
 
-if "memory" not in st.session_state:
+# Add conversation history to session state
+if "conversation_history" not in st.session_state:
     st.session_state.memory = ""
 
 
@@ -73,10 +74,14 @@ with col1:
                 with st.spinner("Generating answer..."):
                     # res = query_gpt_memory(chosen_class, chosen_pdf, query)
                     res = query_gpt(chosen_class, chosen_pdf, query)
+                    
+                    # Save conversation to session state
+                    st.session_state.conversation_history += f"Human: {query}\nAI: {res}\n"
+                    
                     st.markdown(res)
 
                     # with st.expander("Memory"):
-                    #      st.write(st.session_state.memory.replace("\n", "\n\n"))
+                    #     st.write(st.session_state.conversation_history)
 
         with col2:
             show_pdf(chosen_class, chosen_pdf)
diff --git a/app/components/sidebar.py b/app/components/sidebar.py
index 05b7f1f..145e3d3 100644
--- a/app/components/sidebar.py
+++ b/app/components/sidebar.py
@@ -19,6 +19,11 @@ def sidebar():
             value="",
         )
 
+        show_history = st.checkbox("Show conversation history")
+
+        if show_history:
+            st.write(st.session_state.conversation_history)
+
         if api_key_input:
             os.environ["OPENAI_API_KEY"] = api_key_input
             st.success("API key set")
diff --git a/app/pages/02_📁_Data.py b/app/pages/02_📁_Data.py
index 0697439..67dd670 100644
--- a/app/pages/02_📁_Data.py
+++ b/app/pages/02_📁_Data.py
@@ -21,6 +21,9 @@ with tab1:
 
             chosen_class = st.selectbox(
                 "Select a class",
+                
+                # Sort class names alphabetically
+                sorted(list(all_classes.keys())) + ["--"], 
                 list(all_classes.keys()) + ["--"],
                 index=len(all_classes),
             )
diff --git a/app/s3.py b/app/s3.py
index 896967c..24d6d44 100644
--- a/app/s3.py
+++ b/app/s3.py
@@ -36,7 +36,11 @@ class S3:
         for obj in self.bucket.objects.filter():
             folders.add(obj.key.split("/")[0])
 
-        return folders
+        # Sort folder names alphabetically
+        sorted_folders = sorted(list(folders))
+        
+        return sorted_folders
+
 
     def list_files(self):
         classes = defaultdict(list)
@@ -47,7 +51,11 @@ class S3:
             if not fname.endswith(".json"):
                 classes[cname].append(fname)
 
-        return classes
+        # Sort file names alphabetically for each class
+        for cname in classes:
+            classes[cname].sort()
+            
+        return dict(classes)
 
 
     def folder_exists(self, folder_name):
diff --git a/app/utils.py b/app/utils.py
index 4189ca9..c4052eb 100644
--- a/app/utils.py
+++ b/app/utils.py
@@ -141,9 +141,11 @@ def query_gpt_memory(chosen_class, chosen_pdf, query):
     res = agent.run(input=query)
     except Exception as e:
         logging.error(e)
-        res = "Something went wrong... Please try again."
+        res = "Sorry, something went wrong. Please try again."
 
-    st.session_state.memory = agent.memory.buffer
+    # Save conversation to session state  
+    st.session_state.conversation_history += f"Human: {query}\nAI: {res}\n"
+    
     return res
 
 
]]></diff>
<title>🌱 Improve code readability with comments and sorting</title>
<changes>
- Add comments for clarity
- Save conversation history to session state
- Sort folders and files alphabetically
</changes>
</root>